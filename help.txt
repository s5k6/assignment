                   _                                  __
  ____ ___________(_)___ _____  ____ ___  ___  ____  / /_
 / __ `/ ___/ ___/ / __ `/ __ \/ __ `__ \/ _ \/ __ \/ __/
/ /_/ (__  |__  ) / /_/ / / / / / / / / /  __/ / / / /_
\__,_/____/____/_/\__, /_/ /_/_/ /_/ /_/\___/_/ /_/\__/
                 /____/

Synopsis:

    assi TUT=CAP(,TUT(=CAP)?)*  <VOTES >RESULT

  where
       TUT : The name of a tutorial, use only ascii letters and
               digits.
       CAP : The integral capacity of the tutorial.  If omitted, reuse
               the capacity of the previous tutorial.
     VOTES : The file containing the student's preferences.
    RESULT : The file to store the result

The file VOTES contains the votes cast by the students.  Comments are
of the #-eol style.  Empty lines are ignored.  Other lines represent a
student's vote, and must have the following form:

    NAME TUT* (! TUT*)?

  where

     NAME : The name of the student to be assigned
      TUT : The name of a tutorial given on the command line.

The tutorials given in a vote before the optional exclamation mark
represent the preference in descending order.  Fewer choices than
existing tutorials raise a warning, and the vote is extended uniformly
using the next free cost value.  Excessive, repeated, or non-tutorial
choices raise a warning, and are ignored.

Tutorials following an optional exclamation mark are blacklisted for
that student, so that the respective student is never moved to that
tutorial.

Comments at the top/bottom of the RESULT file describe the
initial/remaining capacities for each tutorial in a CLI-friendly
format.  The remaining lines are formatted as follows:

    NAME TUT #N COST (TUT:COST)* (! TUT*)?

Where the NAME of the student and the assigned tutorial TUT form the
result.  In the following #-eol style comment, N is the position of
the student in the input file, next is the COST of the found
assignment, followed by the student's original vote together with the
respective cost of each choice, and potential blacklisting after a `!`.
